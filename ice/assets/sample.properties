# Some configuration need some value passed into them.
# Do not remove or comment out configurations that have ',' 

# Set to true to start processor
ice.processor=true

# Set to true to start reader/UI
ice.reader=true

# s3 bucket to store output files. AWS Credentials must have read/write access to the bucket
ice.work_s3bucketname=<work-s3-bucket-name>

# Region where the work bucket is located
ice.work_s3bucketregion=<work-s3-bucket-region>

# Prefix of Ice output files
ice.work_s3bucketprefix=work/

# Number of worker threads for CUR processing and reader REST api services (default is 5)
ice.numthreads=5

########################
# Reader configuration #
########################
# Set to false to run aggregation only daily, weekly, monthly.
# Allows reader to run with much less memory
ice.hourlyData=true

# Enable tag coverage metrics: none, basic, withUserTags - uses more memory
# must have at least the coverage specified generated by the processor
ice.tagCoverage=none

# The highstock url; host it somewhere else and change this if you need HTTPS
ice.highstockUrl=https://code.highcharts.com/stock/4.2.1/highstock.js

# Your company name to display in the UI
ice.companyName=<your company name>

# Local directory for Ice reader (directory must exist)
ice.reader.localDir=/mnt/ice_reader

# Monthly data cache size for Ice reader
ice.monthlycachesize=12

# A short alert or notice to place in the header of the dashboard pages
ice.notice=

###########################
# Processor configuration #
###########################
# If running in AWS, whether or not to only run a single processor pass
# will stop instance when done processing
ice.processOnce=false

# Month to start processing billing files (YYYY-MM)
ice.startMonth=2017-06

# Local directory for Ice processor (the directory must exist.)
ice.processor.localDir=/mnt/ice_processor

# Set to true to start reservation capacity poller
ice.reservationCapacityPoller=false

# Set to true to break out family reservation usage as separate operation type
ice.breakoutFamilyReservationUsage=false

# Enable the creation of data files that can be imported into services (i.e. ElasticSearch)
# Multiple formats can be specified separated by ","
#  - hourly - generate hourly newline delimited JSON records - one record per line
#  - hourlyRI - generate hourly newline delimited JSON records with RI rates for product/operations that offer reserved instances
#  - daily - generate daily newline delimited JSON records - one record per line
# 
ice.writeJsonFiles=

# Enable tag coverage metrics (uses memory)
#  - none
#  - basic
#  - withUserTags
ice.tagCoverage=none

# Default reservation period
# - oneyear
# - threeyear
ice.reservationPeriod=oneyear

# Default reservation utilization
# - HEAVY
# - PARTIAL
ice.reservationUtilization=PARTIAL

#########################
# Billing configuration #
#########################
# For multiple payer accounts and/or if you need both detailed billing and cost and usage reports supported
# you will need to specify multiple values for each property. Multiple are delimited by ",".

# s3 bucket where the billing files are. AWS Credentials must have read/write access to the bucket
ice.billing_s3bucketname=<billing-s3-bucket-name>

# Region where the billing s3 bucket is located (it should be specified for buckets using v4 validation)
ice.billing_s3bucketregion=us-east-1

# Prefix of the billing files
ice.billing_s3bucketprefix=,

# Your payer account id here
#ice.billing_payerAccountId=123456789012,234567890123
ice.billing_payerAccountId=,

# The assumed role name here if you use IAM role access to read from billing s3 bucket.
# - "ice.billing_accessRoleName=,ice" means assumed role access is only used for the second bucket.
#ice.billing_accessRoleName=,ice

# External id if you are using one if not you can leave this property unset.
#ice.billing_accessExternalId=

# Root name for organization used in account parents path. If not set, a root name is not given. Most useful with multiple payer accounts.
#ice.rootName=Org1,Org2

#######################################################
# Kubernetes reports enable breakout of costs by tag. #
#######################################################
# Report config usage is the same as for billing reports above except in this case accountId is optional if cross-account access is not used
#ice.kubernetes_s3bucketname=kubernetes_s3bucketname1,kubernetes_s3bucketname2
#ice.kubernetes_s3bucketregion=eu-west-1,eu-central-1
#ice.kubernetes_s3bucketprefix=,
#ice.kubernetes_accountId=,123456789012
#ice.kubernetes_accessRoleName=,ice
#ice.kubernetes_accessExternalId=

# Set to true to use blended rates and cost
ice.use_blended=

# The month in which you switched from using detailed billing reports to cost and usage reports.
# - Format: YYYY-MM
# - Cannot be earlier than 2017-07
# - RDS instance reservation IDs aren't correct in the reports until 2017-10.
ice.costAndUsageStartDate=2017-10

# Controls when to switch to using NetUnblended values for rate and cost calculations.
# - Cannot be earlier than 2019-01
# - Setting this value will override the "use_blended" flag above
ice.costAndUsageNetUnblendedStartDate=2019-01

# If NetUnblended is being used, amortization of Upfront RI payments must also include the full EDP discount. Because ICE doesn't use the subscription fee lineitem
# to compute the upfront payments, we must specify discount rate that must be applied to the list price.
# If using CURs starting in 2019-01, the RI amortization and recurring fees are pulled from the DiscountedUsage line items.
# Prior to that, the costs are computed based on the price list data and the edpDiscounts values defined here.
# discount is specified by a comma separated set of start dates at percentage of the form yyyy_mm:%,yyyy_mm:%
ice.edpDiscounts=2019-01:5

# Specify your custom tags. Multiple tags are delimited by ",". 
# - Limit the number of unique value combinations from your custom tags (< 100) otherwise Ice performance will be greatly affected.
# - This list should NOT include aliases that will be consolidated by the tagKey list below.
# - If specified, BasicResourceService will be used to generate resource groups for you.
ice.customTags=<custom-tag-1>.<custom-tag-2>

# Tags to include for code coverage dashboard
#ice.additionalTags=tag3

# The following settings are specified in the in the billing data folder as ice_config.json or ice_config.yaml
#  - Tag name consolidation/aliasing
#  - Tag value consolidation/aliasing
#  - Kubernetes configuration
# See ice_config.sample for an example
#

# Account settings are pulled from the AWS Organizations Service, but can be overridden here for backward compatibility.
#
# change the follow account settings - these are automatically pulled from the organizations API
#   an ICE-specific name can be applied by setting the tag "IceName"
#ice.account.account1=123456789011
#ice.account.account2=123456789012
#ice.account.account3=123456789013

# set reservation owner accounts and the products for which they have reservations
#   These can be pulled from the account tag "IceRiProducts". Product names are separated by '+' for tag values (e.g. "ec2+rds")
# possible values are ec2, rds, redshift, es, ec
#ice.owneraccount.account1=ec2,redshift,rds

# if reservation capacity poller needs to use IAM role to access ec2 API, set the assumed role here for each reservation owner account
# These values can be pulled from the account tag "IceRole"
#ice.owneraccount.account1.role=ice
#ice.owneraccount.account2.role=ice
#ice.owneraccount.account5.role=ice

# if reservation capacity poller needs to use IAM role to access ec2 API and external id is used, set the external id here for each reservation owner account. otherwise you can leave it unset.
# These values can be pulled from the account tag "IceExternalId"
#ice.owneraccount.account1.externalId=
#ice.owneraccount.account2.externalId=
#ice.owneraccount.account5.externalId=
